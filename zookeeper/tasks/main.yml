
- name: create zookeeper user
  user:
   name: "{{ zookeeper_user }}"
   shell: /bin/bash
   home: /home/{{ zookeeper_user }}

- name: make dir for zookeeper
  file:
   path: /home/{{ zookeeper_user }}/{{ zookeeper_defaultFS }}/
   state: directory
   owner: "{{ zookeeper_user }}"
   group: "{{ zookeeper_group }}"

- name: make dir for zookeeper data
  file:
   path: /home/{{ zookeeper_user }}/{{ zookeeper_defaultFS }}/data
   state: directory
   owner: "{{ zookeeper_user }}"
   group: "{{ zookeeper_group }}"

- name: add zookeeper path in env
  become: yes
  blockinfile:
   path: /etc/profile
   block: |
    export ZOOKEEPER_HOME= {{ zookeeper_home }} 
    export PATH=$PATH:$ZOOKEEPER_HOME/bin
   backup: yes

- name: download zookeeper
  get_url:
   url: https://archive.apache.org/dist/zookeeper/{{zookeeper_version}}/{{ zookeeper_version_full }}-bin.tar.gz
   dest: /home/{{ zookeeper_user }}/{{ zookeeper_defaultFS }}/
   owner: "{{ zookeeper_user }}"
   group: "{{ zookeeper_group }}"

- name: unarhive zookeeper
  unarchive:
   src: /home/{{ zookeeper_user }}/{{ zookeeper_defaultFS }}/{{ zookeeper_version_full }}-bin.tar.gz
   dest: /home/{{ zookeeper_user }}/{{ zookeeper_defaultFS }}/
   remote_src: yes
   owner: "{{ zookeeper_user }}"
   group: "{{ zookeeper_group }}"

# Necessary, given https://github.com/ansible/ansible/issues/35426
- name: Fix permissions on the extract directory and sub-directories
  file:
    path: /home/{{ zookeeper_user }}/{{ zookeeper_defaultFS }}/
    owner: "{{ zookeeper_user }}"
    group: "{{ zookeeper_group }}"
    recurse: yes

- name: make dir for zookeeper conf
  file:
   path: "{{zookeeper_home}}-bin/conf"
   state: directory
   owner: "{{ zookeeper_user }}"
   group: "{{ zookeeper_group }}"

- name: generate zoo.cfg
  template:
   src: zoo.cfg.j2
   dest: "{{zookeeper_home}}-bin/conf/zoo.cfg"
   owner: "{{ zookeeper_user }}"
   group: "{{ zookeeper_group }}"

- name: generate myid
  template:
   src: myid.j2
   dest: /home/{{ zookeeper_user }}/{{ zookeeper_defaultFS }}/data/myid
   owner: "{{ zookeeper_user }}"
   group: "{{ zookeeper_group }}"

   #- name: check if zookeeper server is running
   #become: yes
   #shell: runuser -l {{ zookeeper_user }} -c 'jps | grep "QuorumPeerMain" | grep -v grep'
   #ignore_errors: yes
   #changed_when: false
   #register: service_zookeeperquorum_status

   #- name: start zk-server
   #become: yes
   #when: service_zookeeperquorum_status.rc == 1
   #shell: runuser -l {{ zookeeper_user }} -c '{{zookeeper_home}}-bin/bin/zkServer.sh start' 

- name: generate zookeeper service file for systemd
  template:
   src: zookeeper.service.j2
   dest: /etc/systemd/system/zookeeper.service
  become: yes

- name: enable zookeeper.service
  become: yes
  become_method: sudo
  shell: systemctl enable zookeeper.service
